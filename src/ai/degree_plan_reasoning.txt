The course plan is designed to build a strong foundation in computer science and progress students from fundamental concepts to advanced topics over the three terms.

In Term 1 (T1), students start with Programming Fundamentals, which introduces them to essential programming concepts and basic problem-solving skills. This course serves as the entry point to the computer science curriculum and has no prerequisites, making it accessible to all students. Alongside this, students take Discrete Mathematics and Mathematics 1A to understand the theoretical foundations of computer science and develop mathematical reasoning skills.

Moving on to Term 2 (T2), students delve into Computer Systems Fundamentals, which requires a solid understanding of programming acquired in Programming Fundamentals. This course covers hardware-software interactions and system architecture, providing students with a deeper understanding of how computers work at a low level. Software Engineering Fundamentals follows, building on programming skills to teach best practices in software development. Data Structures and Algorithms, which requires Programming Fundamentals, equips students with essential tools for efficient programming and problem-solving.

In Term 3 (T3), students tackle more advanced topics like Object-Oriented Design and Programming, which builds on Software Engineering Fundamentals and Data Structures and Algorithms. This course introduces students to object-oriented principles and design patterns, essential for developing complex software systems. The Computer Science Project requires a combination of Software Engineering Fundamentals and Data Structures and Algorithms, allowing students to apply their knowledge in a practical setting. Finally, Professional Issues and Ethics in Information Technology serves as