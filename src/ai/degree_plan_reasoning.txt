The course plan is structured to build a strong foundation in computer science and progress into more advanced topics, ensuring a well-rounded education and preparation for higher-level courses and real-world applications.

In Term 1, students start with Programming Fundamentals as it serves as the initial step in understanding fundamental concepts of programming without any prerequisites. This course lays the groundwork for students to grasp basic programming skills and logic, which are essential for further studies in computer science.

Discrete Mathematics is also included in Term 1 to introduce students to foundational mathematical concepts that are crucial for understanding algorithms, data structures, and other advanced topics in computer science. It provides the necessary mathematical background for analyzing and solving computational problems.

Mathematics 1A is included in Term 1 to complement the concepts introduced in Programming Fundamentals and Discrete Mathematics. It provides a broader mathematical foundation that is essential for various topics in computer science.

Moving on to Term 2, Computer Systems Fundamentals and Software Engineering Fundamentals are introduced. These courses require Programming Fundamentals as a prerequisite, ensuring that students have a solid understanding of programming concepts before delving into computer systems and software engineering principles.

Data Structures and Algorithms is also included in Term 2, as it builds upon the programming skills acquired in Programming Fundamentals. This course is essential for understanding efficient data organization and algorithm design, which are core components of computer science.

Term 3 focuses on more advanced topics such as Object-Oriented Design and Programming, requiring prior knowledge from Software Engineering Fundamentals