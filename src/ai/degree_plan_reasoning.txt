In the first term, students are introduced to fundamental concepts in programming through Programming Fundamentals. This course serves as the basis for understanding how to write code and solve problems systematically. Concurrently, they also study Discrete Mathematics, which provides the mathematical foundation necessary for computer science and forms the basis for further theoretical concepts.

Moving to the second term, students delve deeper into the inner workings of computers with Computer Systems Fundamentals. This course builds upon the programming knowledge gained in the first term and provides an understanding of how software interacts with hardware. Software Engineering Fundamentals complements this understanding by introducing students to best practices in developing and maintaining software systems. Data Structures and Algorithms is also introduced in this term as it relies on the programming skills learned in the first term and is crucial for efficient problem-solving and software development.

In the third term, students advance to more complex topics with Object-Oriented Design and Programming, which requires a solid understanding of software engineering, data structures, and algorithms. The Computer Science Project course allows students to apply their knowledge and skills to a practical project, integrating concepts from software engineering and data structures. Finally, Professional Issues and Ethics in Information Technology rounds out the curriculum by addressing the ethical and social implications of technology, tying together the technical skills with a broader understanding of the responsibilities of computer scientists in society.

By following this course plan, students build a strong foundation in programming, mathematics, computer systems, software engineering, and data structures. As they progress through the terms, they deepen their