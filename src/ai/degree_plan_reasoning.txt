The course plan is structured to build a strong foundation in computer science and progress to advanced topics in a logical manner.

Term 1 (T1) focuses on laying the groundwork with Programming Fundamentals, Discrete Mathematics, and Mathematics 1A. Programming Fundamentals introduces students to basic programming concepts, while Discrete Mathematics provides the necessary mathematical foundations for more advanced courses. Mathematics 1A further strengthens students' mathematical skills, which are essential for understanding complex algorithms and data structures in later courses.

In Term 2 (T2), students delve into Computer Systems Fundamentals, Software Engineering Fundamentals, and Data Structures and Algorithms. Programming Fundamentals serves as a prerequisite for Computer Systems Fundamentals and Software Engineering Fundamentals, ensuring that students have a solid understanding of programming before moving on to more complex topics. Data Structures and Algorithms builds upon the programming concepts learned in Programming Fundamentals and is crucial for developing efficient coding skills.

Term 3 (T3) builds on the knowledge gained in the previous terms with Object-Oriented Design and Programming, Computer Science Project, and Professional Issues and Ethics in Information Technology. Object-Oriented Design and Programming require a deeper understanding of software engineering and data structures, which is why they follow Software Engineering Fundamentals and Data Structures and Algorithms. The Computer Science Project allows students to apply their knowledge in a practical setting, while Professional Issues and Ethics in Information Technology cultivates a sense of responsibility and ethical decision-making in the field.

Overall, the courses are sequenced to