<<<<<<< HEAD
The course plan is designed to build a strong foundation in computer science and progress students from fundamental concepts to advanced topics over the three terms.

In Term 1 (T1), students start with Programming Fundamentals, which introduces them to essential programming concepts and basic problem-solving skills. This course serves as the entry point to the computer science curriculum and has no prerequisites, making it accessible to all students. Alongside this, students take Discrete Mathematics and Mathematics 1A to understand the theoretical foundations of computer science and develop mathematical reasoning skills.

Moving on to Term 2 (T2), students delve into Computer Systems Fundamentals, which requires a solid understanding of programming acquired in Programming Fundamentals. This course covers hardware-software interactions and system architecture, providing students with a deeper understanding of how computers work at a low level. Software Engineering Fundamentals follows, building on programming skills to teach best practices in software development. Data Structures and Algorithms, which requires Programming Fundamentals, equips students with essential tools for efficient programming and problem-solving.

In Term 3 (T3), students tackle more advanced topics like Object-Oriented Design and Programming, which builds on Software Engineering Fundamentals and Data Structures and Algorithms. This course introduces students to object-oriented principles and design patterns, essential for developing complex software systems. The Computer Science Project requires a combination of Software Engineering Fundamentals and Data Structures and Algorithms, allowing students to apply their knowledge in a practical setting. Finally, Professional Issues and Ethics in Information Technology serves as
=======
In the first term, students are introduced to foundational concepts in Programming Fundamentals, which sets the groundwork for understanding programming languages and basic algorithms. Concurrently, they also study Discrete Mathematics, which provides the mathematical foundation necessary for computer science.

Moving on to the second term, students delve deeper into computer systems in Computer Systems Fundamentals, building on their programming knowledge from the previous term. They also learn about Software Engineering Fundamentals, which introduces them to the principles of software development. Complementing these courses, Data Structures and Algorithms further enhance their problem-solving skills and algorithmic thinking.

In the third term, students advance to Object-Oriented Design and Programming, where they apply their knowledge of software engineering and data structures to design and develop complex software systems. The Computer Science Project allows them to work on a real-world project, integrating theories learned in previous courses. Professional Issues and Ethics in Information Technology concludes the program by addressing the ethical, social, and professional responsibilities of a computer scientist.

The progression of the courses ensures that students build a strong foundation in programming, mathematics, and computer systems before moving on to more advanced topics such as object-oriented design and ethical considerations in information technology. Each course is designed to build upon the knowledge gained in the preceding courses, leading to a well-rounded understanding of computer science principles and practices.
>>>>>>> 3c93a79553b27acf7315aa3cc5029c5d24252149
