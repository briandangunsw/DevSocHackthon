In the proposed course plan, the progression of courses is carefully structured to build a strong foundation in computer science and progress towards advanced topics:

1. **Term 1 (T1)**:
   - **Programming Fundamentals**: This course serves as the starting point for students with no prerequisites. It lays the groundwork for understanding programming concepts and basic problem-solving skills.
   - **Discrete Mathematics**: This course introduces fundamental mathematical concepts essential for computer science, such as logic, sets, functions, and relations.
   - **Mathematics 1A**: This course provides a solid foundation in calculus and algebra, which are necessary for understanding more advanced mathematical concepts in computer science.

2. **Term 2 (T2)**:
   - **Computer Systems Fundamentals**: Building upon the programming foundation from the previous term, this course introduces students to the inner workings of computer systems and their components.
   - **Software Engineering Fundamentals**: This course focuses on principles and practices of software engineering, building on the programming skills acquired in the first term.
   - **Data Structures and Algorithms**: This course introduces the fundamental data structures and algorithms used in computer science, requiring knowledge from Programming Fundamentals.

3. **Term 3 (T3)**:
   - **Object-Oriented Design and Programming**: This course further advances students' programming skills by focusing on object-oriented principles and design patterns, requiring knowledge from Software Engineering Fundamentals and Data Structures and Algorithms.
   - **Computer Science Project**: This capstone
